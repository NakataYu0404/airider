#pragma once
#include <memory>
#include <DxLib.h>
class Transform;

class Capsule
{

public :

	//	デバッグ時の簡易カプセル表示の色
	static constexpr int COLOR = 0xffffff;
	static constexpr float RADIUS = 5.0f;
	static constexpr int DIVISION_NUM = 10;
	static constexpr float HARF = 0.5f;

	//	コンストラクタ
	//	カプセルをつけるオブジェクトを指定する
	Capsule(std::weak_ptr<Transform> parent);
	Capsule(const std::weak_ptr<Capsule> base, const std::weak_ptr<Transform> parent);

	//	デストラクタ
	~Capsule(void);

	//	描画
	void Draw(void);

	//	親Transformからの相対位置を取得
	VECTOR GetLocalPosTop(void) const;
	VECTOR GetLocalPosDown(void) const;

	//	親Transformからの相対位置をセット
	void SetLocalPosTop(const VECTOR& pos);
	void SetLocalPosDown(const VECTOR& pos);

	//	ワールド座標を取得
	VECTOR GetPosTop(void) const;
	VECTOR GetPosDown(void) const;

	//	相対座標を回転させてワールド座標で取得する
	VECTOR GetRotPos(const VECTOR& localPos) const;

	//	半径
	float GetRadius(void) const;
	void SetRadius(float radius);

	//	高さ
	float GetHeight(void) const;

	//	カプセルの中心座標
	VECTOR GetCenter(void) const;

private :

	//	カプセルをくっつける相手
	std::weak_ptr<Transform> transformParent_;

	//	親Transformからの相対位置(上側)
	VECTOR localPosTop_;

	//	親Transformからの相対位置(下側)
	VECTOR localPosDown_;

	//	半径
	float radius_;

};
